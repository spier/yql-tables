<?xml version="1.0" encoding="UTF-8"?>
<table xmlns="http://query.yahooapis.com/v1/schema/table.xsd">
  <meta>
    <author>Rodrigo Setti (rsetti@yahoo-inc.com)</author>
    <description>Validate web documents using W3C's validator</description>
    <documentationURL>http://validator.w3.org/docs/api.html</documentationURL>
    <sampleQuery>select * from {table} where uri='www.yahoo.com'</sampleQuery>
    <sampleQuery>select * from {table} where uri='www.yahoo.com' and type='error' limit 10</sampleQuery>
    <sampleQuery>select line,column,message from {table} where uri='www.yahoo.com' and type='warning'</sampleQuery>
  </meta>
  <bindings>
    <select itemPath="results.issue" produces="XML">
      <urls>
        <url>http://{validator}/check</url>
      </urls>
      <inputs>
        <key id="uri" type="xs:string" paramType="query" />
        <key id="output" type="xs:string" paramType="query" default="soap12" const="true"/>
        <key id="charset" type="xs:string" paramType="query"/>
        <key id="doctype" type="xs:string" paramType="query"/>
        <key id="validator" type="xs:string" paramType="path" default="validator.w3.org"/>
      </inputs>
      <execute>
      <![CDATA[
        var env = Namespace("http://www.w3.org/2003/05/soap-envelope");
        var m = Namespace("http://www.w3.org/2005/10/markup-validator");

        var soap = request.get().response,
            results = <results></results>;

        if (soap) {
          if (soap.env::Body.m::markupvalidationresponse.m::errors) {
            for each (error in soap.env::Body.m::markupvalidationresponse.m::errors.m::errorlist.m::error) {
              results.appendChild( <issue type="error" line={error.m::line.toString()} column={error.m::col.toString()}>
                                     <source>{error.m::source.toString()}</source>
                                     <explanation>{error.m::explanation.toString()}</explanation>
                                     <message>{error.m::message.toString()}</message>
                                   </issue> );
            }
          }

          if (soap.env::Body.m::markupvalidationresponse.m::warnings) {
            for each (warning in soap.env::Body.m::markupvalidationresponse.m::warnings.m::warninglist.m::warning) {
              results.appendChild( <issue type="warning" line={warning.m::line.toString()} column={warning.m::col.toString()}>
                                     <source>{warning.m::source.toString()}</source>
                                     <explanation>{warning.m::explanation.toString()}</explanation>
                                     <message>{warning.m::message.toString()}</message>
                                   </issue> );
            }
          }
        }

        response.object = results;
      ]]>
      </execute>
    </select>
  </bindings>
</table>
